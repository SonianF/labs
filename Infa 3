#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;
int length;
string lenght = "1234567890", len_int = "1234567890-";
const int cin_const = 32767;

string check_choice() //проверка на выбор операции с массивом
{
	string choice;	
	cout << "Input an operation (insert/erase) > " << endl;
	while (!(cin >> choice) || cin.peek() != '\n' || choice != "insert" && choice != "erase")
	{
		cin.clear();
		cin.ignore(cin_const, '\n');
		cout << "Please, enter insert or erase> ";
	}
	return choice;
}

int check_input(string len) { //проверка введенных значений для длины массива и значений
	try {
		string length0 = " "; //вводим строковую переменную
		cin >> length0;
		while (length0.find_first_not_of(len) != -1) { //если введенное значение содержит что-то кроме цифр, то выдается ошибка
			std::cout << "ERROR!Input negative integer> ";
			return check_input(len); //повторный ввод
		}
		return stoi(length0);
	}
	catch (...) {
		cout << "Значение больше допустимого значения типа. Пожалуйста, введите число поменьше " << endl;
		return check_input(len);
	}
}

void input_keybord(vector <int>& array_key, int length)
{
	for (int i = 1; i <= length; i++)
	{
		std::cout << "Введите " << i << " элемент:" << endl;
		int a = check_input(len_int);
		array_key.emplace_back(a);
	}
}

void output_vector(string output, vector <int>& array) 
{
	cout << output;
	for (int i = 0; i < length; i++)
		cout << array[i] << " ";
	cout << "\n";
}

bool check_process()
{
	char cont;
	cout << "Continue? Y/N >";
	while (!(cin >> cont) || cin.peek() != '\n' || (cont != 'y' && cont != 'Y' && cont != 'n' && cont != 'N'))
	{
		cin.clear();
		cin.ignore(cin_const, '\n');
		cout << "Please, enter Y/N > ";
	}
	if (cont == 'Y' || cont == 'y')
		return true;
	else
	{
		cout << "Thank you for using our program! All the best!";
		return false;
	}
}
int check_pos()
{
	int pos;
	cout << "Input an integer> "<<endl;
	while (!(cin >> pos) || cin.peek() != '\n' || pos > length)
	{
		cin.clear();
		cin.ignore(cin_const, '\n');
		cout << "Enter a value less than the length of the array (" << length << ") >";
	}
	return pos;
}

void insert(vector <int>& array)
{
		int position, integer;
		position = check_pos();
		cout << "Input an integer> ";
		cin >> integer;
		array.insert(array.begin() + position, integer);
		int& len = length;
		len = length + 1;
		array.resize(len);
		output_vector("Current array: ", array);
}

void erase_v(vector<int>& array)
{
	int position;
	position = check_pos();
	array.erase(array.begin() +  position-1);
	int& len = length;
	len = length - 1;
	array.resize(len);
	output_vector("Current array: ", array);
}

int main()
{
	bool process = true; //переменная для дальнейшей повторной работы алгоритма
	
		cout << "Input the number integers> ";
		length = check_input(len_int);
		vector<int> array;
		input_keybord(array, length);
		int& len = length;
		output_vector("Current array: ", array);
		
		while (process) {
		string choice = check_choice();
		if (choice == "insert")
			insert(array);
		else
			erase_v(array);
		process = check_process();
	}
}
