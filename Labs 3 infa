
	}

	return choice;

}

long long check_input(string len) { //проверка введенных значений для длины массива

	try {

		string length0 = " "; //вводим строковую переменную

		cin >> length0;

		whil
	}

}

void output_vector(string output, vector <double>& array) {

	cout << output;

	if (length > critical_length) {

		for (int i = 0; i < critical_length; i++) {

			int s = array[i];

			cout << s << " ";

		}

	}

	else {

		for (int i = 0; i < length; i++)

			cout << array[i] << " ";

	}

	cout << "\n";

}

bool check_process()

{

	char cont;

	cout << "Введите Д чтобы продолжить, С - для выхода из программы: ";

	while (!(cin >> cont) || cin.peek() != '\n' || (cont != 'д' && cont != 'Д' && cont != 'с' && cont != 'С'))

	{

		cin.clear();

		cin.ignore(cin_const, '\n');

		cout << "Введите, пожалуйста, Д (далее) или  С (стоп):  ";

	}

	if (cont == 'д' || cont == 'Д')

		return true;

	else

	{

		cout << "Спасибо за использование нашей программы! Всего наилучшего!";

		return false;

	}

}

int main()

{

	SetConsoleCP(RUS_symbols);

	SetConsoleOutputCP(RUS_symbols);

	bool process = true; //переменная для дальнейшей повторной работы алгоритма

	while (process) {

		int choice = check_choice();

		length = check_input(len_int);

		vector<double> array;

		input_keybord(array, length);

		(output0, array);


	
